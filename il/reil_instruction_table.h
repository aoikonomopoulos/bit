#ifndef REIL_INSTRUCTION_TABLE_H
#define REIL_INSTRUCTION_TABLE_H

#include "reil.h"

reil_instruction reil_instruction_table[] =
{
    {REIL_ARITHMETIC_INSTRUCTION, REIL_ADD, "ADD", REIL_OPERAND_INPUT1|REIL_OPERAND_INPUT2|REIL_OPERAND_OUTPUT, 0, 0, {{REIL_OPERAND_EMPTY,{0},0}}, NULL},
    {REIL_ARITHMETIC_INSTRUCTION, REIL_SUB, "SUB", REIL_OPERAND_INPUT1|REIL_OPERAND_INPUT2|REIL_OPERAND_OUTPUT, 0, 0, {{REIL_OPERAND_EMPTY,{0},0}}, NULL},
    {REIL_ARITHMETIC_INSTRUCTION, REIL_MUL, "MUL", REIL_OPERAND_INPUT1|REIL_OPERAND_INPUT2|REIL_OPERAND_OUTPUT, 0, 0, {{REIL_OPERAND_EMPTY,{0},0}}, NULL},
    {REIL_ARITHMETIC_INSTRUCTION, REIL_DIV, "DIV", REIL_OPERAND_INPUT1|REIL_OPERAND_INPUT2|REIL_OPERAND_OUTPUT, 0, 0, {{REIL_OPERAND_EMPTY,{0},0}}, NULL},
    {REIL_ARITHMETIC_INSTRUCTION, REIL_MOD, "MOD", REIL_OPERAND_INPUT1|REIL_OPERAND_INPUT2|REIL_OPERAND_OUTPUT, 0, 0, {{REIL_OPERAND_EMPTY,{0},0}}, NULL},
    {REIL_ARITHMETIC_INSTRUCTION, REIL_BSH, "BSH", REIL_OPERAND_INPUT1|REIL_OPERAND_INPUT2|REIL_OPERAND_OUTPUT, 0, 0, {{REIL_OPERAND_EMPTY,{0},0}}, NULL},
    {REIL_BITWISE_INSTRUCTION, REIL_AND, "AND", REIL_OPERAND_INPUT1|REIL_OPERAND_INPUT2|REIL_OPERAND_OUTPUT, 0, 0, {{REIL_OPERAND_EMPTY,{0},0}}, NULL},
    {REIL_BITWISE_INSTRUCTION, REIL_OR, "OR", REIL_OPERAND_INPUT1|REIL_OPERAND_INPUT2|REIL_OPERAND_OUTPUT, 0, 0, {{REIL_OPERAND_EMPTY,{0},0}}, NULL},
    {REIL_BITWISE_INSTRUCTION, REIL_XOR, "XOR", REIL_OPERAND_INPUT1|REIL_OPERAND_INPUT2|REIL_OPERAND_OUTPUT, 0, 0, {{REIL_OPERAND_EMPTY,{0},0}}, NULL},
    {REIL_DATATRANSFER_INSTRUCTION, REIL_LDM, "LDM", REIL_OPERAND_INPUT1|REIL_OPERAND_OUTPUT, 0, 0, {{REIL_OPERAND_EMPTY,{0},0}}, NULL},
    {REIL_DATATRANSFER_INSTRUCTION, REIL_STM, "STM", REIL_OPERAND_INPUT1|REIL_OPERAND_OUTPUT, 0, 0, {{REIL_OPERAND_EMPTY,{0},0}}, NULL},
    {REIL_DATATRANSFER_INSTRUCTION, REIL_STR, "STR", REIL_OPERAND_INPUT1|REIL_OPERAND_OUTPUT, 0, 0, {{REIL_OPERAND_EMPTY,{0},0}}, NULL},
    {REIL_CONDITIONAL_INSTRUCTION, REIL_BISZ, "BISZ", REIL_OPERAND_INPUT1|REIL_OPERAND_OUTPUT, 0, 0, {{REIL_OPERAND_EMPTY,{0},0}}, NULL},
    {REIL_CONDITIONAL_INSTRUCTION, REIL_JCC, "JCC", REIL_OPERAND_INPUT1|REIL_OPERAND_OUTPUT, 0, 0, {{REIL_OPERAND_EMPTY,{0},0}}, NULL},
    {REIL_OTHER_INSTRUCTION, REIL_UNDEF, "UNDEF", REIL_OPERAND_NONE, 0, 0, {{REIL_OPERAND_EMPTY,{0},0}}, NULL},
    {REIL_OTHER_INSTRUCTION, REIL_UNKN, "UNKN", REIL_OPERAND_NONE, 0, 0, {{REIL_OPERAND_EMPTY,{0},0}}, NULL},
    {REIL_OTHER_INSTRUCTION, REIL_NOP, "NOP", REIL_OPERAND_NONE, 0, 0, {{REIL_OPERAND_EMPTY,{0},0}}, NULL}
};

#endif
